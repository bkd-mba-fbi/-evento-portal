{"version":3,"file":"storage.js","sourceRoot":"","sources":["storage.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,gBAAgB,EAAE,MAAM,0CAA0C,CAAC;AAE5E,OAAO,EAAE,KAAK,EAAE,MAAM,YAAY,CAAC;AACnC,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAMpD,MAAM,cAAc,GAAmB;IACtC,MAAM,EAAE,KAAK;CACb,CAAA;AAGD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6BG;AACH,MAAM,UAAU,OAAO,CAAC,OAAwB;IAC/C,OAAO,GAAG,EAAE,GAAG,cAAc,EAAE,GAAG,OAAO,EAAE,CAAA;IAC3C,2CAA2C;IAC3C,OAAO,gBAAgB,CAAC;QACvB,gEAAgE;QAChE,QAAQ,EAAE,CAAC,IAAkB,EAAE,IAAY,EAAE,EAAE;YAC9C,iCAAiC;YACjC,MAAM,UAAU,GAAG,MAAM,CAAC,wBAAwB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;YACzE,IAAI,CAAC,UAAU,EAAE;gBAChB,MAAM,IAAI,KAAK,CAAC,4DAA4D,CAAC,CAAA;aAC7E;YACD,MAAM,GAAG,GAAW,GAAG,OAAO,EAAE,MAAM,IAAI,EAAE,IAAI,OAAO,EAAE,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;YAC/E,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC9C,MAAM,IAAI,GAAG,UAAU,EAAE,IAAI,CAAA;YAC7B,IAAG,UAAU,EAAE;gBACd,MAAM,aAAa,GAAG,UAAU,CAAC,YAAY,CAAA;gBAC7C,UAAU,CAAC,YAAY,GAAG,GAAG,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,IAAI,aAAa,CAAC,aAAa,CAAC,CAAC;gBACvG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,EAAC,GAAG,UAAU,EAAE,GAAG,OAAO,EAAC,CAAC,CAAA;aACvD;YACD,qCAAqC;YACrC,MAAM,SAAS,GAAG,UAAU,EAAE,GAAG,CAAC;YAClC,MAAM,MAAM,GAAG,UAAuB,KAAc;gBACnD,IAAI,KAAK,KAAK,SAAS,EAAE;oBACxB,YAAY,CAAC,OAAO,CAAC,GAAG,EACvB,CAAC,IAAI,KAAK,MAAM;wBACf,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAe,CAAC,CAAC;iBAC7D;gBACD,IAAI,SAAS,EAAE;oBACd,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;iBAC5B;YACF,CAAC,CAAA;YACD,MAAM,aAAa,GAAG;gBACrB,GAAG,UAAU;gBACb,GAAG,EAAE,MAAM;aACX,CAAC;YACF,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,aAAa,CAAC,CAAC;QAC5D,CAAC;KACD,CAAiC,CAAA;AACnC,CAAC","sourcesContent":["\nimport {State } from '../state.js'\nimport { decorateProperty } from '@lit/reactive-element/decorators/base.js';\nimport { PropertySignature } from './property.js';\nimport { parse } from './parse.js';\nimport { functionValue } from '../functionValue.js';\nexport type StorageOptions = {\n\tkey?: string,\n\tprefix?: string\n}\n\nconst defaultOptions: StorageOptions = {\n\tprefix: '_ls'\n}\n\n\n/**\n * A decorator for syncing state values with localStorage\n * \n * A state property marked with @storage will read the value \n * from the associated localStorage item, parse it depending on \n * its type and make it available to the state. \n * \n * Anytime the state propery changes, the change is reflected \n * to localStorage. \n * \n * A default (`_ls` for `Lit State`) prefix is set \n * \n * @storage must be placed before @property for this to work.\n * \n * How to use: \n * ```js\n * class MyState extends State {\n * \n *   @storage({key: 'storage_path'})\n *   @property({value: 1}) a;\n * }\n * const s = new S()\n * \n * localStorage.getItem('_ls_storage_path') \n *  \n * ```\n * \n * @param options \n * @returns PropertySignature\n */\nexport function storage(options?: StorageOptions) {\n\toptions = { ...defaultOptions, ...options }\n\t// console.info('storage options', options)\n\treturn decorateProperty({\n\t\t// @ts-ignore ctor is typof State and not typeof ReactiveElement\n\t\tfinisher: (ctor: typeof State, name: string) => {\n\t\t\t// console.info('storage ', name)\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(ctor.prototype, name);\n\t\t\tif (!descriptor) {\n\t\t\t\tthrow new Error('@local-storage decorator need to be called after @property')\n\t\t\t}\n\t\t\tconst key: string = `${options?.prefix || ''}_${options?.key || String(name)}`;\n\t\t\tconst definition = ctor.propertyMap.get(name);\n\t\t\tconst type = definition?.type\n\t\t\tif(definition) {\n\t\t\t\tconst previousValue = definition.initialValue\n\t\t\t\tdefinition.initialValue = () => parse(localStorage.getItem(key), type) ?? functionValue(previousValue);\n\t\t\t\tctor.propertyMap.set(name, {...definition, ...options})\n\t\t\t}\n\t\t\t// const oldGetter = descriptor?.get;\n\t\t\tconst oldSetter = descriptor?.set;\n\t\t\tconst setter = function (this: State, value: unknown) {\n\t\t\t\tif (value !== undefined) {\n\t\t\t\t\tlocalStorage.setItem(key,\n\t\t\t\t\t\t(type === Object ||\n\t\t\t\t\t\t\ttype === Array) ? JSON.stringify(value) : value as string);\n\t\t\t\t}\n\t\t\t\tif (oldSetter) {\n\t\t\t\t\toldSetter.call(this, value);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst newDescriptor = {\n\t\t\t\t...descriptor,\n\t\t\t\tset: setter\n\t\t\t};\n\t\t\tObject.defineProperty(ctor.prototype, name, newDescriptor);\n\t\t}\n\t}) as unknown as PropertySignature\n}\n"]}