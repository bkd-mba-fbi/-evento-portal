import { State } from './state.js';
type Values = {
    [key: string]: unknown;
};
/**
 * A base class for building state hooks
 */
export declare class Hook {
    state: State;
    static hookName: string;
    unsubscribe: () => void;
    constructor(state: State);
    subscribe(): import("./state.js").Unsubscribe;
    get hookedProps(): [string, import("./state.js").PropertyMapOptions][];
    /**
     * Returns true if the key is configured for this hook
     * @param key
     * @returns boolean
     */
    isHookedProp(key: string): any;
    getDefinition(key: string): import("./state.js").PropertyMapOptions | undefined;
    toState(values: Values): void;
    fromState(key: string, value: unknown, state: State): void;
    reset(): void;
}
export {};
//# sourceMappingURL=hook.d.ts.map