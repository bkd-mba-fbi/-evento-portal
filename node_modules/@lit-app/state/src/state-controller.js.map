{"version":3,"file":"state-controller.js","sourceRoot":"","sources":["state-controller.ts"],"names":[],"mappings":"AAEA,OAAO,EAAC,UAAU,EAAC,MAAM,kBAAkB,CAAA;AAO3C,MAAM,OAAO,eAAe;IAMhB;IACF;IAJT,QAAQ,CAAU;IAElB,YACW,IAA4B,EAC9B,KAAQ,EAChB,EAAa;QAFH,SAAI,GAAJ,IAAI,CAAwB;QAC9B,UAAK,GAAL,KAAK,CAAG;QAGhB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAA;IAC1D,CAAC;IAED,aAAa;QACZ,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjE,IAAI,CAAC,QAAQ,EAAE,CAAC;IAEjB,CAAC;IACD,gBAAgB;QACf,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrE,CAAC;CACD","sourcesContent":["import { ReactiveController, ReactiveControllerHost } from 'lit';\nimport { State } from './state.js'\nimport {StateEvent} from './state-event.js'\n/**\n * A reactive-controller holding a state\n */\n\ntype callback = () => void | EventListener\n\nexport class StateController<T extends State>\n\timplements ReactiveController {\n\n\tcallback: callback\n\t\n\tconstructor(\n\t\tprotected host: ReactiveControllerHost,\n\t\tprivate state: T,\n\t\tcb?: callback,\n\t) {\n\t\tthis.host.addController(this);\n\t\tthis.callback = cb ? cb : () => this.host.requestUpdate()\n\t}\n\n\thostConnected(): void {\n\t\tthis.state.addEventListener(StateEvent.eventName, this.callback);\n\t\tthis.callback();\n\n\t}\n\thostDisconnected(): void {\n\t\tthis.state.removeEventListener(StateEvent.eventName, this.callback);\n\t}\n}"]}