name: Build & Push Docker Image üöÄ

on:
  push:
    branches: [test-ci]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  prerequisites:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.extract-version.outputs.version }}
      branch: ${{ steps.extract-branch.branch}}

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Get version tag of HEAD if any
        id: extract-version
        run: |
          git fetch --prune --tags
          echo "version=`git tag -l --points-at=HEAD | grep '^v' | cat`" >> $GITHUB_OUTPUT

      - name: Extract branch name
        id: extract-branch
        shell: bash
        run: |
          echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT

  # If the current commit has no version tag, an image needs to be
  # built, tagged and pushed to the registry
  build-and-push-image:
    runs-on: ubuntu-latest
    needs: prerequisites
    if: needs.prerequisites.outputs.version == ''

    strategy:
      matrix:
        node-version: [18]

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.version }}
          cache: "npm"

      - name: Install dependencies üîß
        run: npm ci

      - name: Build application üè≠
        run: |
          npm run build
          mv dist evento-portal
          mkdir dist
          mv evento-portal dist

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.64.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INITIAL_VERSION: 1.0.0
          WITH_V: true

      - name: Login to Docker registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine environment and version tags based on Git & Docker registry
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  # If the current commit has a version tag, the existing image should
  # be reused by retagging and pushing it
  retag-and-push-image:
    runs-on: ubuntu-latest
    needs: prerequisites
    if: needs.prerequisites.outputs.version != ''

    steps:
      - name: Retag existing image & push
        # Environment tag name: ${{ needs.prerequisites.outputs.branch }}
        run: echo "TODO"
